import numpy as np

t = np.array([167, 218,  65,  92,  91,  80,  64, 196, 109, 127,  10, 217, 211,
       187, 136, 179, 158,   1,  76,  71,  53,  48,  83,  32, 171,   6,
       155, 247, 245, 202,  69, 116,  80,  24, 144, 148, 107, 136, 194,
       214,  95,  79, 241, 174, 186,  33,  26,  95,  71,  71, 223,   6,
        14, 215, 175, 172,  58,   0,  47,  13, 218, 161, 249,  40, 199,
        58,  46, 204, 163,   4, 106, 246,  81, 133,  41, 189,  16,  38,
       220,  82,   1, 129,  34, 200, 154, 230, 110,  99, 183, 248,  50,
       250, 160, 107,  22,   8, 236,  78,  99, 150, 241, 161,  97, 243,
         2, 207, 208,  37, 215, 193, 252, 164, 254,  24, 243, 229, 214,
        62,  69, 240, 123,   3, 234, 195,  80, 253, 192,  58, 133, 145,
       221, 173, 172, 142,  68, 128,  36, 192, 188, 161,  29,   7, 175,
        38, 150, 195,  85, 226,  17, 255, 143, 143,  44, 207,  27, 214,
       248,  79, 132,   0,  78,  90,  21, 193,  73,  29, 243, 153, 191,
        31, 172, 227,  45,  13,  14, 170,  55,   5, 147, 212, 201, 198,
       190,  95,  93, 248, 165, 227, 229, 198, 134, 213,   0, 203, 114,
        35, 204,   2, 178, 168, 237, 162, 159,  14,  48,  94, 247, 191,
        73, 149, 134,   0, 189, 149, 250, 170,  69,  24,  21, 102, 121,
        92,  80, 149,  70, 204, 178, 220, 222,  74,  10,  92, 117, 219,
        50,  76, 191, 152, 209, 249, 100, 184, 166,  72, 157,   3, 157,
       174, 164, 197, 118, 227, 254, 228, 120,  38])
    
dec_t = [np.array([2094.]),
 np.array([36.75]),
 np.array([112.7835316 ,  -0.53033009]),
 np.array([-21.625, 155.625,  22.5  , 108.   ]),
 np.array([-73.53910524, -42.95673696,  28.10749455, -19.44543648,
         27.75394116, 153.26539482, -50.20458146,   4.59619408]),
 np.array([  50.75,  172.25,  -29.5 ,  -40.25,  -56.5 ,   17.75,   -6.75,
         -49.25,  -89.  ,  -65.75,   -4.25,  101.  ,   62.  , -114.  ,
          48.25,   83.25]),
 np.array([ -39.24442636,   88.38834765,  -31.81980515,   18.7383297 ,
          90.1561146 ,  -88.03479426,   72.47844507,  194.45436483,
           4.24264069,  -31.11269837,   80.96372645, -153.44217152,
          63.28605692,  130.81475452,  -58.33630945,    9.89949494,
         -57.27564928, -115.96551211,  -34.64823228,  -11.66726189,
          41.01219331, -133.99673503,   93.69164851,   14.49568901,
          70.71067812,    2.82842712,  142.12846302,   79.90306627,
         -96.87362902,  119.85459941,  -10.96015511,  -23.33452378]),
 np.array([-114. ,   44.5,   -4.5,  -41.5,   -6. ,    7. ,  112.5, -131. ,
          94. ,   82.5,  120.5,  -49. ,   43.5,   59. ,    1. ,  -45. ,
          -3.5,   92.5,    8. ,  124. ,   52. ,  -87.5,  -65.5, -118.5,
         -32.5,  -31. ,   18. ,    4. ,   97. ,   16.5,  151.5,  -41.5,
          58. ,  -59. ,   60.5,   88.5,  -17. ,    7. ,   -5. ,  -97.5,
          23. ,  147. ,   88.5,   63. ,  149.5,  -57. ,   25.5,  -40. ,
         -27. ,   70. , -113. ,  148. ,  -44. ,   41. ,   15. ,    8. ,
          62. ,  -97. , -105. ,   57.5,  -23. ,   85.5,   -8. , -162. ]),
 np.array([  36.06244584,   19.09188309,   -7.77817459,   93.33809512,
          12.72792206,  146.37110371,  -16.97056275,   30.40559159,
        -111.01576465,   -3.53553391,   -3.53553391,  -36.06244584,
        -116.6726189 ,   65.05382387,  -30.40559159,   33.23401872,
         -39.59797975,    2.82842712,   20.50609665,   14.14213562,
         -11.3137085 ,  -47.37615434, -108.18733752,   48.7903679 ,
          -0.        , -153.44217152,  142.12846302,   -2.12132034,
         -41.01219331,  -24.04163056,  -40.30508653, -147.78531727,
         -99.70205615,  111.72287143, -112.42997821,   98.99494937,
          36.76955262,  104.65180362,   15.55634919,  -97.5807358 ,
          90.50966799,  117.37972568,   53.74011537,   -7.77817459,
          45.96194078,  141.42135624,  -37.4766594 ,   -9.89949494,
        -111.72287143,   36.06244584,  -56.56854249,  103.23759005,
         144.95689014, -120.91525958,  -15.55634919,  -62.22539674,
        -162.63455967,   -9.89949494, -107.48023074,  120.91525958,
         -84.85281374,  -27.57716447,  122.32947315,  -94.75230868,
           8.48528137,  -33.9411255 ,  -21.21320344,   42.42640687,
         110.30865787,  -19.09188309,  -15.55634919,  -96.87362902,
          31.81980515,   99.70205615,  168.29141392,   -0.        ,
         115.25840533,  132.22896808, -119.50104602,  -93.33809512,
           8.48528137,  121.62236636,  -31.11269837,  -63.63961031,
        -113.13708499,   38.89087297,  -22.627417  ,  110.30865787,
         -35.35533906,   45.96194078,   -2.12132034,  -67.17514421,
         109.60155108,   43.84062043,  -21.92031022,   55.86143571,
         143.54267658,  -55.86143571, -142.8355698 ,   -7.07106781,
         -53.03300859, -102.53048327,   32.52691193,  -39.59797975,
          53.74011537,  -94.75230868,  -28.28427125,  -56.56854249,
         -31.81980515,   57.27564928,  -20.50609665,   48.7903679 ,
          94.75230868,   29.69848481, -104.65180362,   57.98275606,
          72.12489168,   18.38477631,  -27.57716447,   28.28427125,
          59.39696962,  -66.46803743, -108.8944443 ,   12.02081528,
          23.33452378,   77.07463915,  -18.38477631,  -57.98275606])]

def test_haar_dec(haar_dec):
    dec_student = haar_dec(t)
    
    if len(dec_t) != len(dec_student):
        print("Different number of wavelet levels from test.")
        return False
    
    for i, (level_t, level_student) in enumerate(zip(dec_t, dec_student)):
        if len(level_t) != len(level_student):
            print("Wavelet level {0} differed in length from test.".format(i))
            return False
        if np.sum(np.abs(level_t - level_student)) > 0.1:
            print("Wavelet level {0} coefficients are incorrect.".format(i))
            return False
    
    print("Test passed.")
    return True
    
def test_haar_rec(haar_rec):
    
    student_rec = haar_rec(dec_t)

    if len(student_rec) != len(t):
        print("Length of reconstructed signal is wrong.")
        return False
    if np.sum(np.abs(student_rec-t)) > 0.1:
        print("Reconstructed signal is incorrect. Error is: {0}".format(np.sum(student_rec-t)))
        return False
    
    print("Test passed.")
    return True
        
